--[[  
    VSTAR FINAL SCRIPT  
    Dibuat berdasarkan struktur dan fitur yang diminta.
    UI Library: 3itx-UI-LIB
--]]

-- Load Library
local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Just3itx/3itx-UI-LIB/refs/heads/main/Lib"))() 
local FlagsManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/Just3itx/3itx-UI-LIB/refs/heads/main/ConfigManager"))()

-- Main UI
local main = lib:Load({
    Title = 'VSTAR',
    ToggleButton = "RBXID or GetCustomasset",
    BindGui = Enum.KeyCode.RightControl,
})

------------------------------------------------------
-- TAB MAIN
------------------------------------------------------
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

local TabMain = main:AddTab("MAIN")
main:SelectTab()

-- Info Server
local SecInfoServer = TabMain:AddSection({Title = "Info Server", Description = "Informasi dasar server"})
local fpsLabel = SecInfoServer:AddParagraph({Title = "FPS", Description = "0"})
local playerCountLabel = SecInfoServer:AddParagraph({Title = "Player Count", Description = "0"})
local placeIdLabel = SecInfoServer:AddParagraph({Title = "Place ID", Description = tostring(game.PlaceId)})

RunService.RenderStepped:Connect(function()
    local fps = math.floor(1 / RunService.RenderStepped:Wait())
    fpsLabel:SetDescription(tostring(fps))
    playerCountLabel:SetDescription(tostring(#Players:GetPlayers()))
end)

-- Anti AFK
local SecAntiAFK = TabMain:AddSection({Title = "Anti AFK"})
SecAntiAFK:AddButton({
    Title = "Enable Anti AFK",
    Callback = function()
        LocalPlayer.Idled:Connect(function()
            game:GetService("VirtualUser"):Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
            task.wait(1)
            game:GetService("VirtualUser"):Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
        end)
        lib:Notification("VSTAR", "Anti AFK Enabled!", 2)
    end
})

------------------------------------------------------
-- TAB PLAYER
------------------------------------------------------
local TabPlayer = main:AddTab("PLAYER")

-- Movement
local SecMovement = TabPlayer:AddSection({Title = "Movement"})

-- Walk Speed
local wsToggle = false
local wsValue = 16
SecMovement:AddToggle("WalkSpeedToggle", {
    Title = "Walk Speed",
    Default = false,
    Callback = function(v) wsToggle = v end
})
SecMovement:AddSlider("WalkSpeedValue", {
    Title = "Walk Speed Value",
    Min = 0,
    Max = 200,
    Default = 16,
    Callback = function(val) wsValue = val end
})
RunService.Stepped:Connect(function()
    if wsToggle then
        LocalPlayer.Character.Humanoid.WalkSpeed = wsValue
    end
end)

-- High Jump
local hjToggle = false
local hjValue = 50
SecMovement:AddToggle("HighJumpToggle", {
    Title = "High Jump",
    Default = false,
    Callback = function(v) hjToggle = v end
})
SecMovement:AddSlider("HighJumpValue", {
    Title = "High Jump Power",
    Min = 0,
    Max = 300,
    Default = 50,
    Callback = function(val) hjValue = val end
})
RunService.Stepped:Connect(function()
    if hjToggle then
        LocalPlayer.Character.Humanoid.JumpPower = hjValue
    end
end)

-- Infinite Jump
local infJump = false
SecMovement:AddToggle("InfiniteJump", {
    Title = "Infinite Jump",
    Default = false,
    Callback = function(v) infJump = v end
})
game:GetService("UserInputService").JumpRequest:Connect(function()
    if infJump and LocalPlayer.Character then
        LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
    end
end)

-- Mode
local SecMode = TabPlayer:AddSection({Title = "Mode"})

-- No Clip
local noclip = false
SecMode:AddToggle("NoClip", {
    Title = "No Clip",
    Default = false,
    Callback = function(v) noclip = v end
})
RunService.Stepped:Connect(function()
    if noclip and LocalPlayer.Character then
        for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") and part.CanCollide then
                part.CanCollide = false
            end
        end
    end
end)

-- No Fall Damage
SecMode:AddToggle("NoFallDamage", {
    Title = "No Fall Damage",
    Default = false,
    Callback = function(v)
        if v then
            LocalPlayer.Character.Humanoid.StateChanged:Connect(function(_, new)
                if new == Enum.HumanoidStateType.Freefall then
                    LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Seated)
                end
            end)
        end
    end
})

-- Godmode
SecMode:AddToggle("Godmode", {
    Title = "Godmode",
    Default = false,
    Callback = function(v)
        if v then
            LocalPlayer.Character.Humanoid.Health = math.huge
            LocalPlayer.Character.Humanoid.MaxHealth = math.huge
        end
    end
})

------------------------------------------------------
-- TAB MISC
------------------------------------------------------
local TabMisc = main:AddTab("MISC")

-- Teleport
local SecTeleport = TabMisc:AddSection({Title = "Teleport"})
local playerList = {}
local function refreshPlayers()
    playerList = {}
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then table.insert(playerList, p.Name) end
    end
end
refreshPlayers()

SecTeleport:AddDropdown("TeleportPlayer", {
    Title = "Select Player",
    Options = playerList,
    Callback = function(name)
        local target = Players:FindFirstChild(name)
        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character:PivotTo(target.Character.HumanoidRootPart.CFrame)
        end
    end
})
SecTeleport:AddButton({
    Title = "Refresh Player List",
    Callback = refreshPlayers
})

-- Other
local SecOther = TabMisc:AddSection({Title = "Other"})

-- Chat Spy
SecOther:AddToggle("ChatSpy", {
    Title = "Chat Spy",
    Default = false,
    Callback = function(state)
        if state then
            for _, p in pairs(Players:GetPlayers()) do
                p.Chatted:Connect(function(msg)
                    print("[CHAT SPY] "..p.Name..": "..msg)
                end)
            end
        end
    end
})

-- ESP
local function createESP(player)
    if not player.Character or player.Character:FindFirstChild("VSTAR_ESP") then return end
    local highlight = Instance.new("Highlight")
    highlight.Name = "VSTAR_ESP"
    highlight.Adornee = player.Character
    highlight.FillColor = Color3.fromRGB(255, 0, 0)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.Parent = player.Character
end
local function removeESP(player)
    if player.Character and player.Character:FindFirstChild("VSTAR_ESP") then
        player.Character.VSTAR_ESP:Destroy()
    end
end
SecOther:AddToggle("ESP", {
    Title = "ESP",
    Default = false,
    Callback = function(state)
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                if state then
                    createESP(player)
                else
                    removeESP(player)
                end
            end
        end
    end
})

-- Full Bright
local Lighting = game:GetService("Lighting")
local normalBrightness = Lighting.Brightness
local normalClockTime = Lighting.ClockTime
local normalFogEnd = Lighting.FogEnd
local normalAmbient = Lighting.Ambient
SecOther:AddToggle("FullBright", {
    Title = "Full Bright",
    Default = false,
    Callback = function(state)
        if state then
            Lighting.Brightness = 2
            Lighting.ClockTime = 14
            Lighting.FogEnd = 100000
            Lighting.Ambient = Color3.fromRGB(255, 255, 255)
        else
            Lighting.Brightness = normalBrightness
            Lighting.ClockTime = normalClockTime
            Lighting.FogEnd = normalFogEnd
            Lighting.Ambient = normalAmbient
        end
    end
})

------------------------------------------------------
-- TAB SERVER
------------------------------------------------------
local TabServer = main:AddTab("SERVER")
local SecServerControl = TabServer:AddSection({Title = "Server Control"})

-- Auto Reconnect
SecServerControl:AddToggle("AutoReconnect", {
    Title = "Auto Reconnect",
    Default = false,
    Callback = function(v)
        if v then
            game:GetService("Players").LocalPlayer.OnTeleport:Connect(function()
                game:GetService("TeleportService"):Teleport(game.PlaceId)
            end)
        end
    end
})

-- Rejoin
SecServerControl:AddButton({
    Title = "Rejoin",
    Callback = function()
        game:GetService("TeleportService"):Teleport(game.PlaceId, LocalPlayer)
    end
})

-- Hop Server
SecServerControl:AddButton({
    Title = "Hop Server",
    Callback = function()
        local HttpService = game:GetService("HttpService")
        local servers = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100")).data
        for _, srv in ipairs(servers) do
            if srv.id ~= game.JobId then
                game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, srv.id)
                break
            end
        end
    end
})

-- Copy Server ID
SecServerControl:AddButton({
    Title = "Copy Server ID",
    Callback = function()
        setclipboard(game.JobId)
    end
})

-- Join Server via ID
SecServerControl:AddTextbox({
    Title = "Join via Server ID",
    Default = "",
    PlaceHolder = "Server ID",
    Callback = function(id)
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, id)
    end
})

------------------------------------------------------
-- TAB CONFIG
------------------------------------------------------
local TabConfig = main:AddTab("CONFIG")
FlagsManager:SetLibrary(lib)
FlagsManager:SetIgnoreIndexes({})
FlagsManager:SetFolder("Config/VSTAR")
FlagsManager:InitSaveSystem(TabConfig)

------------------------------------------------------
-- Notifikasi Awal
------------------------------------------------------
lib:Notification('VSTAR', 'Thanks for using VSTAR!', 3)
